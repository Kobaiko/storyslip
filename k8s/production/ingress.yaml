apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storyslip-ingress
  namespace: storyslip-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.storyslip.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.storyslip.com; frame-ancestors 'none';";
spec:
  tls:
  - hosts:
    - api.storyslip.com
    - app.storyslip.com
    - widget.storyslip.com
    secretName: storyslip-tls
  rules:
  # API
  - host: api.storyslip.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storyslip-api-service
            port:
              number: 3001
  
  # Dashboard
  - host: app.storyslip.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storyslip-dashboard-service
            port:
              number: 8080
  
  # Widget CDN
  - host: widget.storyslip.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storyslip-widget-service
            port:
              number: 8080

---
# Separate ingress for widget with different CORS settings
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storyslip-widget-ingress
  namespace: storyslip-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Cache-Control: public, max-age=31536000, immutable";
      more_set_headers "Access-Control-Allow-Origin: *";
      more_set_headers "Access-Control-Allow-Methods: GET, OPTIONS";
      more_set_headers "X-Content-Type-Options: nosniff";
spec:
  tls:
  - hosts:
    - cdn.storyslip.com
    secretName: storyslip-cdn-tls
  rules:
  - host: cdn.storyslip.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storyslip-widget-service
            port:
              number: 8080