# Production Dockerfile for StorySlip API
FROM node:18-alpine AS base

# Install security updates and required packages
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates && \
    rm -rf /var/cache/apk/*

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S storyslip -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
FROM base AS deps
RUN npm ci --only=production && npm cache clean --force

# Build stage
FROM base AS builder
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build

# Production stage
FROM base AS runner

# Set production environment
ENV NODE_ENV=production
ENV PORT=3001

# Copy built application
COPY --from=builder --chown=storyslip:nodejs /app/dist ./dist
COPY --from=deps --chown=storyslip:nodejs /app/node_modules ./node_modules
COPY --chown=storyslip:nodejs package*.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads && \
    chown -R storyslip:nodejs /app

# Switch to non-root user
USER storyslip

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/api/monitoring/health || exit 1

# Expose port
EXPOSE 3001

# Start application with dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]